CREATE TABLE privilege_of_user (
	"id" serial NOT NULL,
	"description" varchar(40) NOT NULL,
	"power" int NOT NULL,
	CONSTRAINT "privilege_of_user_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE users (
	"id" serial NOT NULL,
	"name" varchar(100) NOT NULL,
	"username" varchar(100) NOT NULL,
	"password" TEXT NOT NULL,
	"id_previlegio" int NOT NULL,
	CONSTRAINT "user_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE training (
	"id" serial NOT NULL,
	"description" varchar(40) NOT NULL,
	"id_user" int NOT NULL,
	CONSTRAINT "training_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE exercices (
	"id" serial NOT NULL,
	"descripton" varchar(70) NOT NULL,
	"id_weights" int NOT NULL DEFAULT 0,
	"id_training" int NOT NULL,
	CONSTRAINT "exercices_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE weights (
	"id" serial NOT NULL,
	"pounds" DECIMAL(20,3) NOT NULL,
	CONSTRAINT "weights_pk" PRIMARY KEY ("id")
) WITH (
  OIDS=FALSE
);




ALTER TABLE users ADD CONSTRAINT "user_fk0" FOREIGN KEY ("id_previlegio") REFERENCES "privilege_of_user"("id");

ALTER TABLE training ADD CONSTRAINT "training_fk0" FOREIGN KEY ("id_user") REFERENCES "users"("id");

ALTER TABLE exercices ADD CONSTRAINT "exercices_fk0" FOREIGN KEY ("id_weights") REFERENCES "weights"("id");
ALTER TABLE exercices ADD CONSTRAINT "exercices_fk1" FOREIGN KEY ("id_training") REFERENCES "training"("id");


SELECT * FROM privilege_of_user;
SELECT * FROM users;

SELECT * FROM users RIGHT JOIN privilege_of_user on privilege_of_user.id = users.id_previlegio;

SELECT * FROM users JOIN training on users.id = training.id_user left join exercices on training.id = exercices.id_training
Left join weights on weights.id = exercices.id_weights;

SELECT * FROM exercices;
SELECT * FROM training;

SELECT * FROM weights;

CREATE TABLE history_users (
	"id" serial NOT NULL primary key,
	"id_user" int NOT NULL,
	"name_user" varchar not null,
	"id_training" int not null,
	"traing_name" int not null,
	"name_exercice" int NOT NULL DEFAULT 0,
	"pounds_history" int NOT NULL,
	"date_change" timestamp  default current_timestamp
	
) WITH (
  OIDS=FALSE
);


